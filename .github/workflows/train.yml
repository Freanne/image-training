name: Train Model

on:
    push:
      branches:
        - abraham
        - main
  
permissions:
    contents: write
  
jobs:
    train-model:
      runs-on: ubuntu-latest
  
      steps:
        - name: Checkout repository
          uses: actions/checkout@v2
  
        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: '3.10'
  
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -U jax
            pip install -r requirements.txt
  
        - name: Train and save model
          run: |
            python main.py
        
        - name: Create Release
          id: create_release
          uses: actions/create-release@latest
          with:
            tag_name: training_models_${{ github.run_number }}_${{ github.run_attempt }}
            release_name: Model
            body: |
              Changes in this Release:
              - Model trained and saved
            draft: false
            prerelease: false
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
        - name: Upload artefacts to Release
          uses: actions/upload-release-asset@v1
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./artefacts.zip
            asset_name: artefacts.zip
            asset_content_type: application/octet-stream
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


        - name: Upload models to Release
          uses: actions/upload-release-asset@v1
          with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: ./models.zip
              asset_name: models.zip
              asset_content_type: application/octet-stream
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

              
        - name: Upload graphs to Release
          uses: actions/upload-release-asset@v1
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./graphs.zip
            asset_name: graphs.zip
            asset_content_type: application/octet-stream
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        - name: Extract Commit Hash
          id: get_commit
          run: echo "COMMIT_HASH=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_ENV

        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            ecr: auto
            logout: true
            username: zach27
            password: dckr_pat_WGbBhmAkE62bjUhI-HWzROEttdc

            
        - name: Build API's Docker Image
          uses: docker/setup-buildx-action@v2

        - name: Build and Push Docker Image
          run: |
            docker buildx build \
              --platform linux/amd64 \
              --build-arg COMMIT_HASH=${{ env.COMMIT_HASH }} \
              -t zach27/api-corn-disease-detection:${{ env.COMMIT_HASH }} \
              -t zach27/api-corn-disease-detection:latest \
              --push \
              ./